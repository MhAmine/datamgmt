% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/package_copy.R
\name{clone_package}
\alias{clone_package}
\title{Clone a Data Package}
\usage{
clone_package(mn_pull, mn_push, resource_map_pid)
}
\arguments{
\item{mn_pull}{(MNode) The Member Node to download from.}

\item{mn_push}{(MNode) The Member Node to upload to.}

\item{resource_map_pid}{(chraracter) The identifier of the Resource Map for the package to download.}
}
\description{
This function copies a Data Package from one DataOne member node to another.
It can also be used to copy an older version of a Data Package to the same
member node in order to restore it, provided that the old Package is then
obsoleted by the copied version.
}
\examples{
\dontrun{
cn_pull <- CNode("PROD")
mn_pull <- getMNode(cn_pull, "urn:node:ARCTIC")
cn_push <- CNode('STAGING')
mn_push <- getMNode(cn_push,'urn:node:mnTestARCTIC')
clone_package(mn_pull, mn_push, "resource_map_doi:10.18739/A2RZ6X")
}

TODO - create dynamic structure that allows for more than one level of children (3+ nesting levels)
TODO - add messages per child package?
TODO - possible function names? 1) clone_package 2) duplicate_package 3) copy_package
TODO - query all pids for unique rightsHolders and add to Sysmeta
}
\author{
Dominic Mullen, \email{dmullen17@gmail.com}
}
